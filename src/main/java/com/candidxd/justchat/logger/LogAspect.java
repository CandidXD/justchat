package com.candidxd.justchat.logger;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.*;import org.springframework.stereotype.Component;/** * @author yzk * @Title: LogAspect * @ProjectName demo * @Description: AOP * @date 2018/8/299:34 */@Aspect@Componentpublic class LogAspect {    @Pointcut("execution(* com.candidxd.justchat.controller.*.*(..))")    public void aPointcut() {    }    @Around("aPointcut()&& @annotation(annotation)")    public Object logAround(ProceedingJoinPoint pjp, BussAnnotation annotation) throws Throwable {        System.out.println("===AOP日志，模块:" + annotation.moduleName() + "  开始执行===");        System.out.println("===AOP日志，方法:" + annotation.option() + "  开始执行===");        Object proceed = pjp.proceed();        System.out.println("===AOP日志，方法:" + annotation.option() + "  结束执行===");        System.out.println("===AOP日志，模块:" + annotation.moduleName() + "  结束执行===");        System.out.println("\n---------------------------------------------------------------------------------------------------------------------\n");        return proceed;    }    @AfterThrowing("aPointcut()")    public void logException() {        System.out.println("===AOP日志，方法出现异常===");    }}